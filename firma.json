{"v":"5.7.3","fr":60,"ip":0,"op":540,"w":1080,"h":1080,"nm":"firma","ddd":0,"assets":[],"fonts":{"list":[{"fName":"FuturaTDemi","fFamily":"FuturaT","fStyle":"Demi","ascent":74.8992919921875}]},"layers":[{"ddd":0,"ind":1,"ty":5,"nm":"años","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[542.387,645.347,0],"ix":2},"a":{"a":0,"k":[0.387,-30.653,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [YRD] Controls","np":14,"mn":"Pseudo/MHAC PrCtrl YRD 3","ix":1,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl YRD 3-0001","ix":1,"v":{"a":0,"k":[0,0],"ix":1}},{"ty":0,"nm":"Rotation","mn":"Pseudo/MHAC PrCtrl YRD 3-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":3,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl YRD 3-0003","ix":3,"v":{"a":0,"k":[0,0],"ix":3}},{"ty":0,"nm":"Opacity","mn":"Pseudo/MHAC PrCtrl YRD 3-0004","ix":4,"v":{"a":0,"k":100,"ix":4}},{"ty":0,"nm":"Delay","mn":"Pseudo/MHAC PrCtrl YRD 3-0005","ix":5,"v":{"a":0,"k":40,"ix":5}},{"ty":0,"nm":"Frequency","mn":"Pseudo/MHAC PrCtrl YRD 3-0006","ix":6,"v":{"a":0,"k":100,"ix":6}},{"ty":0,"nm":"Decay","mn":"Pseudo/MHAC PrCtrl YRD 3-0007","ix":7,"v":{"a":0,"k":50,"ix":7}},{"ty":7,"nm":"Reversed Order","mn":"Pseudo/MHAC PrCtrl YRD 3-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":7,"nm":"Randomized Order","mn":"Pseudo/MHAC PrCtrl YRD 3-0009","ix":9,"v":{"a":0,"k":0,"ix":9}},{"ty":0,"nm":"Random Start Value - Min","mn":"Pseudo/MHAC PrCtrl YRD 3-0010","ix":10,"v":{"a":0,"k":100,"ix":10}},{"ty":0,"nm":"Random Start Value - Max","mn":"Pseudo/MHAC PrCtrl YRD 3-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":0,"nm":"Random Seed","mn":"Pseudo/MHAC PrCtrl YRD 3-0012","ix":12,"v":{"a":0,"k":5,"ix":12}}]},{"ty":5,"nm":"AC OUT [YRD] 2 Controls","np":14,"mn":"Pseudo/MHAC PrCtrl YRD 3","ix":2,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl YRD 3-0001","ix":1,"v":{"a":0,"k":[0,0],"ix":1}},{"ty":0,"nm":"Rotation","mn":"Pseudo/MHAC PrCtrl YRD 3-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":3,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl YRD 3-0003","ix":3,"v":{"a":0,"k":[0,0],"ix":3}},{"ty":0,"nm":"Opacity","mn":"Pseudo/MHAC PrCtrl YRD 3-0004","ix":4,"v":{"a":0,"k":100,"ix":4}},{"ty":0,"nm":"Delay","mn":"Pseudo/MHAC PrCtrl YRD 3-0005","ix":5,"v":{"a":0,"k":40,"ix":5}},{"ty":0,"nm":"Frequency","mn":"Pseudo/MHAC PrCtrl YRD 3-0006","ix":6,"v":{"a":0,"k":100,"ix":6}},{"ty":0,"nm":"Decay","mn":"Pseudo/MHAC PrCtrl YRD 3-0007","ix":7,"v":{"a":0,"k":50,"ix":7}},{"ty":7,"nm":"Reversed Order","mn":"Pseudo/MHAC PrCtrl YRD 3-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":7,"nm":"Randomized Order","mn":"Pseudo/MHAC PrCtrl YRD 3-0009","ix":9,"v":{"a":0,"k":0,"ix":9}},{"ty":0,"nm":"Random Start Value - Min","mn":"Pseudo/MHAC PrCtrl YRD 3-0010","ix":10,"v":{"a":0,"k":100,"ix":10}},{"ty":0,"nm":"Random Start Value - Max","mn":"Pseudo/MHAC PrCtrl YRD 3-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":0,"nm":"Random Seed","mn":"Pseudo/MHAC PrCtrl YRD 3-0012","ix":12,"v":{"a":0,"k":5,"ix":12}}]}],"t":{"d":{"k":[{"s":{"s":96.696907043457,"f":"FuturaTDemi","t":"años","j":2,"tr":-65,"lh":116.036288452148,"ls":0,"fc":[1,1,1]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                case '2': {\n                        tTrO = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acValAvg(val) {\n        acAccAvgC = $bm_sum(acAccAvgC, 1);\n        if (acAccAvgW === null) {\n            acAccAvg = $bm_sum(acAccAvg, val);\n        } else {\n            acAccAvg = $bm_sum(acAccAvg, $bm_mul(val, acAccAvgW));\n            acAccAvgWC++;\n        }\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccAvg = 0;\n    var acAccAvgC = 0;\n    var acAccAvgW = null;\n    var acAccAvgWC = 0;\n    if (tTrI !== null && tTrO !== null && tTrI > tTrO) {\n        acAccAvgW = $bm_div($bm_sub(t, tTrO), $bm_sub(tTrI, tTrO));\n        if (acAccAvgW < 0) {\n            acAccAvgW = 0;\n        }\n        if (acAccAvgW > 1) {\n            acAccAvgW = 1;\n        }\n        acAccAvgW = $bm_sub(1, acAccAvgW);\n    } else {\n        acAccAvgW = null;\n    }\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [YRD] Controls');\n    if (ac.en) {\n        acValAvg([\n            0,\n            -50\n        ]);\n    }\n    if (tTrI !== null && tTrO !== null && tTrI > tTrO) {\n        acAccAvgW = $bm_div($bm_sub(t, tTrO), $bm_sub(tTrI, tTrO));\n        if (acAccAvgW < 0) {\n            acAccAvgW = 0;\n        }\n        if (acAccAvgW > 1) {\n            acAccAvgW = 1;\n        }\n    } else {\n        acAccAvgW = null;\n    }\n    ac.en = false;\n    if (tTrO !== null && t >= tTrO) {\n        upACo(0, 0, tTrO, $bm_sub($bm_sub(bL.outPoint, tTrO), thisComp.frameDuration));\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC OUT [YRD] 2 Controls');\n    if (ac.en) {\n        acValAvg([\n            0,\n            -50\n        ]);\n    }\n    v = thisProperty.value;\n    if (acAccAvgWC > 1) {\n        acAccAvgC--;\n    }\n    if (acAccAvgC > 0) {\n        v = $bm_sum(v, $bm_div(acAccAvg, acAccAvgC));\n    }\n    return v;\n}\n$bm_rt = result;"}},"a":[{"nm":"AC IN [YRD] Overshoot","s":{"t":1,"b":1,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    ;\n    var MH = {};\n    var mhRseed = 1;\n    MH.srand = function mhRandSeed(seed, timeless) {\n        mhRseed = Math.abs(Math.floor(seed));\n        if (typeof timeless == 'undefined' || !timeless) {\n            mhRseed = $bm_sum(mhRseed, $bm_mod(Math.floor($bm_mul(time, 1103515245)), 1073741823));\n        }\n        mhRseed &= 1073741823;\n        for (var i = 0; i < 5; ++i) {\n            mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        }\n    };\n    MH.rand = function mhRand(limit1, limit2) {\n        mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        var r = $bm_div(mhRseed, 1073741823);\n        if (typeof limit2 == 'undefined') {\n            if (typeof limit1 == 'undefined') {\n                return r;\n            } else {\n                return $bm_mul(r, limit1);\n            }\n        } else {\n            return $bm_sum($bm_mul(r, $bm_sub(limit2, limit1)), limit1);\n        }\n    };\n    function acCheckboxValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValSet(val) {\n        acAccS = val;\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = $bm_div($bm_mul(a, Math.cos($bm_mul($bm_mul($bm_mul(t, f), Math.PI), 2))), Math.exp($bm_mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return $bm_mul(y, $bm_sub(1, $bm_div($bm_sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccS = null;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [YRD] Controls');\n    if (ac.en) {\n        function mhOvershootRig1(allDimensionsEqual, ignoreRandomStartVal, overrideRandomOrderSeed, overrideRandomStartValueSeed) {\n            var d = $bm_div($bm_div(acSliderValP('AC IN [YRD] Controls', 'Delay', 50), 100), textTotal);\n            var a = $bm_sub(1, $bm_mul(d, $bm_sub(textTotal, 1)));\n            var i = acCheckboxValP('AC IN [YRD] Controls', 'Reversed Order', 0) == 1 ? $bm_sum($bm_sub(textTotal, textIndex), 1) : $bm_sub(textIndex, 1);\n            if (acCheckboxValP('AC IN [YRD] Controls', 'Randomized Order', 0) == 1) {\n                var seed = $bm_sum(textIndex, acSliderValP('AC IN [YRD] Controls', 'Random Seed', 1));\n                if (typeof overrideRandomOrderSeed == 'undefined' || !overrideRandomOrderSeed) {\n                    seedRandom(1, true);\n                    seed = $bm_sum(seed, random(0, 1000));\n                } else {\n                    seed = $bm_sum(seed, overrideRandomOrderSeed);\n                }\n                MH.srand(seed, true);\n                i = MH.rand(textTotal);\n            }\n            var ta = $bm_mul(i, d);\n            var x = $bm_sub(1, ac.fade);\n            var r = 0;\n            if (x > $bm_sum(ta, a))\n                r = 0;\n            else if (x < ta)\n                r = 1;\n            else\n                r = mhOvershoot($bm_div($bm_sub(x, ta), a), 1, $bm_div(acSliderValP('AC IN [YRD] Controls', 'Frequency', 100), 100), $bm_div(acSliderValP('AC IN [YRD] Controls', 'Decay', 40), 10));\n            if (typeof ignoreRandomStartVal == 'undefined')\n                var ignoreRandomStartVal = false;\n            var minX = ignoreRandomStartVal ? 100 : acSliderValP('AC IN [YRD] Controls', 'Random Start Value - Min', 100);\n            var maxX = ignoreRandomStartVal ? 100 : acSliderValP('AC IN [YRD] Controls', 'Random Start Value - Max', 100);\n            if (!ignoreRandomStartVal) {\n                var seed = $bm_sum(textIndex, acSliderValP('AC IN [YRD] Controls', 'Random Seed', 1));\n                if (typeof overrideRandomStartValueSeed == 'undefined' || !overrideRandomStartValueSeed) {\n                    seedRandom(2, true);\n                    seed = $bm_sum(seed, random(0, 1000));\n                } else {\n                    seed = $bm_sum(seed, overrideRandomStartValueSeed);\n                }\n                MH.srand(seed, true);\n            }\n            if (typeof allDimensionsEqual == 'undefined')\n                var allDimensionsEqual = false;\n            if (allDimensionsEqual)\n                acValSet($bm_mul($bm_mul([\n                    1,\n                    1,\n                    1\n                ], MH.rand(minX, maxX)), r));\n            else\n                acValSet($bm_mul([\n                    MH.rand(minX, maxX),\n                    MH.rand(minX, maxX),\n                    MH.rand(minX, maxX)\n                ], r));\n        }\n        mhOvershootRig1(false, false, 1, 1);\n    }\n    v = thisProperty.value;\n    if (acAccS !== null) {\n        v = acAccS;\n    }\n    return v;\n}\n$bm_rt = result;"},"a":{"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acPointValP('AC IN [YRD] Controls', 'Position', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"s":{"a":0,"k":[0,0,100],"ix":3,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acPointValP('AC IN [YRD] Controls', 'Scale', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":8,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acAngleValP('AC IN [YRD] Controls', 'Rotation', 0));\n    return v;\n}\n$bm_rt = result;"},"o":{"a":0,"k":0,"ix":9,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acSliderValP('AC IN [YRD] Controls', 'Opacity', 100));\n    return v;\n}\n$bm_rt = result;"}}},{"nm":"AC OUT [YRD] 2 Overshoot","s":{"t":1,"b":1,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '2': {\n                        tTrO = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    ;\n    var MH = {};\n    var mhRseed = 1;\n    MH.srand = function mhRandSeed(seed, timeless) {\n        mhRseed = Math.abs(Math.floor(seed));\n        if (typeof timeless == 'undefined' || !timeless) {\n            mhRseed = $bm_sum(mhRseed, $bm_mod(Math.floor($bm_mul(time, 1103515245)), 1073741823));\n        }\n        mhRseed &= 1073741823;\n        for (var i = 0; i < 5; ++i) {\n            mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        }\n    };\n    MH.rand = function mhRand(limit1, limit2) {\n        mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        var r = $bm_div(mhRseed, 1073741823);\n        if (typeof limit2 == 'undefined') {\n            if (typeof limit1 == 'undefined') {\n                return r;\n            } else {\n                return $bm_mul(r, limit1);\n            }\n        } else {\n            return $bm_sum($bm_mul(r, $bm_sub(limit2, limit1)), limit1);\n        }\n    };\n    function acCheckboxValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValSet(val) {\n        acAccS = val;\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = $bm_div($bm_mul(a, Math.cos($bm_mul($bm_mul($bm_mul(t, f), Math.PI), 2))), Math.exp($bm_mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return $bm_mul(y, $bm_sub(1, $bm_div($bm_sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccS = null;\n    ac.en = false;\n    if (tTrO !== null && t >= tTrO) {\n        upACo(0, 0, tTrO, $bm_sub($bm_sub(bL.outPoint, tTrO), thisComp.frameDuration));\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC OUT [YRD] 2 Controls');\n    if (ac.en) {\n        function mhOvershootRig1(allDimensionsEqual, ignoreRandomStartVal, overrideRandomOrderSeed, overrideRandomStartValueSeed) {\n            var d = $bm_div($bm_div(acSliderValP('AC OUT [YRD] 2 Controls', 'Delay', 50), 100), textTotal);\n            var a = $bm_sub(1, $bm_mul(d, $bm_sub(textTotal, 1)));\n            var i = acCheckboxValP('AC OUT [YRD] 2 Controls', 'Reversed Order', 0) == 1 ? $bm_sum($bm_sub(textTotal, textIndex), 1) : $bm_sub(textIndex, 1);\n            if (acCheckboxValP('AC OUT [YRD] 2 Controls', 'Randomized Order', 0) == 1) {\n                var seed = $bm_sum(textIndex, acSliderValP('AC OUT [YRD] 2 Controls', 'Random Seed', 1));\n                if (typeof overrideRandomOrderSeed == 'undefined' || !overrideRandomOrderSeed) {\n                    seedRandom(1, true);\n                    seed = $bm_sum(seed, random(0, 1000));\n                } else {\n                    seed = $bm_sum(seed, overrideRandomOrderSeed);\n                }\n                MH.srand(seed, true);\n                i = MH.rand(textTotal);\n            }\n            var ta = $bm_mul(i, d);\n            var x = $bm_sub(1, ac.fade);\n            var r = 0;\n            if (x > $bm_sum(ta, a))\n                r = 0;\n            else if (x < ta)\n                r = 1;\n            else\n                r = mhOvershoot($bm_div($bm_sub(x, ta), a), 1, $bm_div(acSliderValP('AC OUT [YRD] 2 Controls', 'Frequency', 100), 100), $bm_div(acSliderValP('AC OUT [YRD] 2 Controls', 'Decay', 40), 10));\n            if (typeof ignoreRandomStartVal == 'undefined')\n                var ignoreRandomStartVal = false;\n            var minX = ignoreRandomStartVal ? 100 : acSliderValP('AC OUT [YRD] 2 Controls', 'Random Start Value - Min', 100);\n            var maxX = ignoreRandomStartVal ? 100 : acSliderValP('AC OUT [YRD] 2 Controls', 'Random Start Value - Max', 100);\n            if (!ignoreRandomStartVal) {\n                var seed = $bm_sum(textIndex, acSliderValP('AC OUT [YRD] 2 Controls', 'Random Seed', 1));\n                if (typeof overrideRandomStartValueSeed == 'undefined' || !overrideRandomStartValueSeed) {\n                    seedRandom(2, true);\n                    seed = $bm_sum(seed, random(0, 1000));\n                } else {\n                    seed = $bm_sum(seed, overrideRandomStartValueSeed);\n                }\n                MH.srand(seed, true);\n            }\n            if (typeof allDimensionsEqual == 'undefined')\n                var allDimensionsEqual = false;\n            if (allDimensionsEqual)\n                acValSet($bm_mul($bm_mul([\n                    1,\n                    1,\n                    1\n                ], MH.rand(minX, maxX)), r));\n            else\n                acValSet($bm_mul([\n                    MH.rand(minX, maxX),\n                    MH.rand(minX, maxX),\n                    MH.rand(minX, maxX)\n                ], r));\n        }\n        mhOvershootRig1(false, false, 1, 1);\n    }\n    v = thisProperty.value;\n    if (acAccS !== null) {\n        v = acAccS;\n    }\n    return v;\n}\n$bm_rt = result;"},"a":{"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acPointValP('AC OUT [YRD] 2 Controls', 'Position', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"s":{"a":0,"k":[0,0,100],"ix":3,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acPointValP('AC OUT [YRD] 2 Controls', 'Scale', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":8,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acAngleValP('AC OUT [YRD] 2 Controls', 'Rotation', 0));\n    return v;\n}\n$bm_rt = result;"},"o":{"a":0,"k":0,"ix":9,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acSliderValP('AC OUT [YRD] 2 Controls', 'Opacity', 100));\n    return v;\n}\n$bm_rt = result;"}}}]},"ip":134,"op":410,"st":31,"bm":0},{"ddd":0,"ind":2,"ty":5,"nm":"10","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[540,516.611,0],"ix":2},"a":{"a":0,"k":[13.058,-81.389,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [YRD] Controls","np":14,"mn":"Pseudo/MHAC PrCtrl YRD 3","ix":1,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl YRD 3-0001","ix":1,"v":{"a":0,"k":[0,0],"ix":1}},{"ty":0,"nm":"Rotation","mn":"Pseudo/MHAC PrCtrl YRD 3-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":3,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl YRD 3-0003","ix":3,"v":{"a":0,"k":[0,0],"ix":3}},{"ty":0,"nm":"Opacity","mn":"Pseudo/MHAC PrCtrl YRD 3-0004","ix":4,"v":{"a":0,"k":100,"ix":4}},{"ty":0,"nm":"Delay","mn":"Pseudo/MHAC PrCtrl YRD 3-0005","ix":5,"v":{"a":0,"k":40,"ix":5}},{"ty":0,"nm":"Frequency","mn":"Pseudo/MHAC PrCtrl YRD 3-0006","ix":6,"v":{"a":0,"k":100,"ix":6}},{"ty":0,"nm":"Decay","mn":"Pseudo/MHAC PrCtrl YRD 3-0007","ix":7,"v":{"a":0,"k":50,"ix":7}},{"ty":7,"nm":"Reversed Order","mn":"Pseudo/MHAC PrCtrl YRD 3-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":7,"nm":"Randomized Order","mn":"Pseudo/MHAC PrCtrl YRD 3-0009","ix":9,"v":{"a":0,"k":0,"ix":9}},{"ty":0,"nm":"Random Start Value - Min","mn":"Pseudo/MHAC PrCtrl YRD 3-0010","ix":10,"v":{"a":0,"k":100,"ix":10}},{"ty":0,"nm":"Random Start Value - Max","mn":"Pseudo/MHAC PrCtrl YRD 3-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":0,"nm":"Random Seed","mn":"Pseudo/MHAC PrCtrl YRD 3-0012","ix":12,"v":{"a":0,"k":5,"ix":12}}]},{"ty":5,"nm":"AC OUT [YRD] 2 Controls","np":14,"mn":"Pseudo/MHAC PrCtrl YRD 3","ix":2,"en":1,"ef":[{"ty":3,"nm":"Position","mn":"Pseudo/MHAC PrCtrl YRD 3-0001","ix":1,"v":{"a":0,"k":[0,0],"ix":1}},{"ty":0,"nm":"Rotation","mn":"Pseudo/MHAC PrCtrl YRD 3-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":3,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl YRD 3-0003","ix":3,"v":{"a":0,"k":[0,0],"ix":3}},{"ty":0,"nm":"Opacity","mn":"Pseudo/MHAC PrCtrl YRD 3-0004","ix":4,"v":{"a":0,"k":100,"ix":4}},{"ty":0,"nm":"Delay","mn":"Pseudo/MHAC PrCtrl YRD 3-0005","ix":5,"v":{"a":0,"k":40,"ix":5}},{"ty":0,"nm":"Frequency","mn":"Pseudo/MHAC PrCtrl YRD 3-0006","ix":6,"v":{"a":0,"k":100,"ix":6}},{"ty":0,"nm":"Decay","mn":"Pseudo/MHAC PrCtrl YRD 3-0007","ix":7,"v":{"a":0,"k":50,"ix":7}},{"ty":7,"nm":"Reversed Order","mn":"Pseudo/MHAC PrCtrl YRD 3-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":7,"nm":"Randomized Order","mn":"Pseudo/MHAC PrCtrl YRD 3-0009","ix":9,"v":{"a":0,"k":0,"ix":9}},{"ty":0,"nm":"Random Start Value - Min","mn":"Pseudo/MHAC PrCtrl YRD 3-0010","ix":10,"v":{"a":0,"k":100,"ix":10}},{"ty":0,"nm":"Random Start Value - Max","mn":"Pseudo/MHAC PrCtrl YRD 3-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":0,"nm":"Random Seed","mn":"Pseudo/MHAC PrCtrl YRD 3-0012","ix":12,"v":{"a":0,"k":5,"ix":12}}]}],"t":{"d":{"k":[{"s":{"s":265,"f":"FuturaTDemi","t":"10","j":2,"tr":-144,"lh":318,"ls":0,"fc":[1,1,1]},"t":0}]},"p":{},"m":{"g":1,"a":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                case '2': {\n                        tTrO = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acValAvg(val) {\n        acAccAvgC = $bm_sum(acAccAvgC, 1);\n        if (acAccAvgW === null) {\n            acAccAvg = $bm_sum(acAccAvg, val);\n        } else {\n            acAccAvg = $bm_sum(acAccAvg, $bm_mul(val, acAccAvgW));\n            acAccAvgWC++;\n        }\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccAvg = 0;\n    var acAccAvgC = 0;\n    var acAccAvgW = null;\n    var acAccAvgWC = 0;\n    if (tTrI !== null && tTrO !== null && tTrI > tTrO) {\n        acAccAvgW = $bm_div($bm_sub(t, tTrO), $bm_sub(tTrI, tTrO));\n        if (acAccAvgW < 0) {\n            acAccAvgW = 0;\n        }\n        if (acAccAvgW > 1) {\n            acAccAvgW = 1;\n        }\n        acAccAvgW = $bm_sub(1, acAccAvgW);\n    } else {\n        acAccAvgW = null;\n    }\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [YRD] Controls');\n    if (ac.en) {\n        acValAvg([\n            0,\n            -50\n        ]);\n    }\n    if (tTrI !== null && tTrO !== null && tTrI > tTrO) {\n        acAccAvgW = $bm_div($bm_sub(t, tTrO), $bm_sub(tTrI, tTrO));\n        if (acAccAvgW < 0) {\n            acAccAvgW = 0;\n        }\n        if (acAccAvgW > 1) {\n            acAccAvgW = 1;\n        }\n    } else {\n        acAccAvgW = null;\n    }\n    ac.en = false;\n    if (tTrO !== null && t >= tTrO) {\n        upACo(0, 0, tTrO, $bm_sub($bm_sub(bL.outPoint, tTrO), thisComp.frameDuration));\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC OUT [YRD] 2 Controls');\n    if (ac.en) {\n        acValAvg([\n            0,\n            -50\n        ]);\n    }\n    v = thisProperty.value;\n    if (acAccAvgWC > 1) {\n        acAccAvgC--;\n    }\n    if (acAccAvgC > 0) {\n        v = $bm_sum(v, $bm_div(acAccAvg, acAccAvgC));\n    }\n    return v;\n}\n$bm_rt = result;"}},"a":[{"nm":"AC IN [YRD] Overshoot","s":{"t":1,"b":1,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    ;\n    var MH = {};\n    var mhRseed = 1;\n    MH.srand = function mhRandSeed(seed, timeless) {\n        mhRseed = Math.abs(Math.floor(seed));\n        if (typeof timeless == 'undefined' || !timeless) {\n            mhRseed = $bm_sum(mhRseed, $bm_mod(Math.floor($bm_mul(time, 1103515245)), 1073741823));\n        }\n        mhRseed &= 1073741823;\n        for (var i = 0; i < 5; ++i) {\n            mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        }\n    };\n    MH.rand = function mhRand(limit1, limit2) {\n        mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        var r = $bm_div(mhRseed, 1073741823);\n        if (typeof limit2 == 'undefined') {\n            if (typeof limit1 == 'undefined') {\n                return r;\n            } else {\n                return $bm_mul(r, limit1);\n            }\n        } else {\n            return $bm_sum($bm_mul(r, $bm_sub(limit2, limit1)), limit1);\n        }\n    };\n    function acCheckboxValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValSet(val) {\n        acAccS = val;\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = $bm_div($bm_mul(a, Math.cos($bm_mul($bm_mul($bm_mul(t, f), Math.PI), 2))), Math.exp($bm_mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return $bm_mul(y, $bm_sub(1, $bm_div($bm_sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccS = null;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [YRD] Controls');\n    if (ac.en) {\n        function mhOvershootRig1(allDimensionsEqual, ignoreRandomStartVal, overrideRandomOrderSeed, overrideRandomStartValueSeed) {\n            var d = $bm_div($bm_div(acSliderValP('AC IN [YRD] Controls', 'Delay', 50), 100), textTotal);\n            var a = $bm_sub(1, $bm_mul(d, $bm_sub(textTotal, 1)));\n            var i = acCheckboxValP('AC IN [YRD] Controls', 'Reversed Order', 0) == 1 ? $bm_sum($bm_sub(textTotal, textIndex), 1) : $bm_sub(textIndex, 1);\n            if (acCheckboxValP('AC IN [YRD] Controls', 'Randomized Order', 0) == 1) {\n                var seed = $bm_sum(textIndex, acSliderValP('AC IN [YRD] Controls', 'Random Seed', 1));\n                if (typeof overrideRandomOrderSeed == 'undefined' || !overrideRandomOrderSeed) {\n                    seedRandom(1, true);\n                    seed = $bm_sum(seed, random(0, 1000));\n                } else {\n                    seed = $bm_sum(seed, overrideRandomOrderSeed);\n                }\n                MH.srand(seed, true);\n                i = MH.rand(textTotal);\n            }\n            var ta = $bm_mul(i, d);\n            var x = $bm_sub(1, ac.fade);\n            var r = 0;\n            if (x > $bm_sum(ta, a))\n                r = 0;\n            else if (x < ta)\n                r = 1;\n            else\n                r = mhOvershoot($bm_div($bm_sub(x, ta), a), 1, $bm_div(acSliderValP('AC IN [YRD] Controls', 'Frequency', 100), 100), $bm_div(acSliderValP('AC IN [YRD] Controls', 'Decay', 40), 10));\n            if (typeof ignoreRandomStartVal == 'undefined')\n                var ignoreRandomStartVal = false;\n            var minX = ignoreRandomStartVal ? 100 : acSliderValP('AC IN [YRD] Controls', 'Random Start Value - Min', 100);\n            var maxX = ignoreRandomStartVal ? 100 : acSliderValP('AC IN [YRD] Controls', 'Random Start Value - Max', 100);\n            if (!ignoreRandomStartVal) {\n                var seed = $bm_sum(textIndex, acSliderValP('AC IN [YRD] Controls', 'Random Seed', 1));\n                if (typeof overrideRandomStartValueSeed == 'undefined' || !overrideRandomStartValueSeed) {\n                    seedRandom(2, true);\n                    seed = $bm_sum(seed, random(0, 1000));\n                } else {\n                    seed = $bm_sum(seed, overrideRandomStartValueSeed);\n                }\n                MH.srand(seed, true);\n            }\n            if (typeof allDimensionsEqual == 'undefined')\n                var allDimensionsEqual = false;\n            if (allDimensionsEqual)\n                acValSet($bm_mul($bm_mul([\n                    1,\n                    1,\n                    1\n                ], MH.rand(minX, maxX)), r));\n            else\n                acValSet($bm_mul([\n                    MH.rand(minX, maxX),\n                    MH.rand(minX, maxX),\n                    MH.rand(minX, maxX)\n                ], r));\n        }\n        mhOvershootRig1(false, false, 1, 1);\n    }\n    v = thisProperty.value;\n    if (acAccS !== null) {\n        v = acAccS;\n    }\n    return v;\n}\n$bm_rt = result;"},"a":{"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acPointValP('AC IN [YRD] Controls', 'Position', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"s":{"a":0,"k":[0,0,100],"ix":3,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acPointValP('AC IN [YRD] Controls', 'Scale', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":8,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acAngleValP('AC IN [YRD] Controls', 'Rotation', 0));\n    return v;\n}\n$bm_rt = result;"},"o":{"a":0,"k":0,"ix":9,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acSliderValP('AC IN [YRD] Controls', 'Opacity', 100));\n    return v;\n}\n$bm_rt = result;"}}},{"nm":"AC OUT [YRD] 2 Overshoot","s":{"t":1,"b":1,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '2': {\n                        tTrO = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    ;\n    var MH = {};\n    var mhRseed = 1;\n    MH.srand = function mhRandSeed(seed, timeless) {\n        mhRseed = Math.abs(Math.floor(seed));\n        if (typeof timeless == 'undefined' || !timeless) {\n            mhRseed = $bm_sum(mhRseed, $bm_mod(Math.floor($bm_mul(time, 1103515245)), 1073741823));\n        }\n        mhRseed &= 1073741823;\n        for (var i = 0; i < 5; ++i) {\n            mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        }\n    };\n    MH.rand = function mhRand(limit1, limit2) {\n        mhRseed = $bm_mod($bm_sum($bm_mul(1103515245, mhRseed), 12345), 1073741823);\n        var r = $bm_div(mhRseed, 1073741823);\n        if (typeof limit2 == 'undefined') {\n            if (typeof limit1 == 'undefined') {\n                return r;\n            } else {\n                return $bm_mul(r, limit1);\n            }\n        } else {\n            return $bm_sum($bm_mul(r, $bm_sub(limit2, limit1)), limit1);\n        }\n    };\n    function acCheckboxValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValSet(val) {\n        acAccS = val;\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = $bm_div($bm_mul(a, Math.cos($bm_mul($bm_mul($bm_mul(t, f), Math.PI), 2))), Math.exp($bm_mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return $bm_mul(y, $bm_sub(1, $bm_div($bm_sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccS = null;\n    ac.en = false;\n    if (tTrO !== null && t >= tTrO) {\n        upACo(0, 0, tTrO, $bm_sub($bm_sub(bL.outPoint, tTrO), thisComp.frameDuration));\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC OUT [YRD] 2 Controls');\n    if (ac.en) {\n        function mhOvershootRig1(allDimensionsEqual, ignoreRandomStartVal, overrideRandomOrderSeed, overrideRandomStartValueSeed) {\n            var d = $bm_div($bm_div(acSliderValP('AC OUT [YRD] 2 Controls', 'Delay', 50), 100), textTotal);\n            var a = $bm_sub(1, $bm_mul(d, $bm_sub(textTotal, 1)));\n            var i = acCheckboxValP('AC OUT [YRD] 2 Controls', 'Reversed Order', 0) == 1 ? $bm_sum($bm_sub(textTotal, textIndex), 1) : $bm_sub(textIndex, 1);\n            if (acCheckboxValP('AC OUT [YRD] 2 Controls', 'Randomized Order', 0) == 1) {\n                var seed = $bm_sum(textIndex, acSliderValP('AC OUT [YRD] 2 Controls', 'Random Seed', 1));\n                if (typeof overrideRandomOrderSeed == 'undefined' || !overrideRandomOrderSeed) {\n                    seedRandom(1, true);\n                    seed = $bm_sum(seed, random(0, 1000));\n                } else {\n                    seed = $bm_sum(seed, overrideRandomOrderSeed);\n                }\n                MH.srand(seed, true);\n                i = MH.rand(textTotal);\n            }\n            var ta = $bm_mul(i, d);\n            var x = $bm_sub(1, ac.fade);\n            var r = 0;\n            if (x > $bm_sum(ta, a))\n                r = 0;\n            else if (x < ta)\n                r = 1;\n            else\n                r = mhOvershoot($bm_div($bm_sub(x, ta), a), 1, $bm_div(acSliderValP('AC OUT [YRD] 2 Controls', 'Frequency', 100), 100), $bm_div(acSliderValP('AC OUT [YRD] 2 Controls', 'Decay', 40), 10));\n            if (typeof ignoreRandomStartVal == 'undefined')\n                var ignoreRandomStartVal = false;\n            var minX = ignoreRandomStartVal ? 100 : acSliderValP('AC OUT [YRD] 2 Controls', 'Random Start Value - Min', 100);\n            var maxX = ignoreRandomStartVal ? 100 : acSliderValP('AC OUT [YRD] 2 Controls', 'Random Start Value - Max', 100);\n            if (!ignoreRandomStartVal) {\n                var seed = $bm_sum(textIndex, acSliderValP('AC OUT [YRD] 2 Controls', 'Random Seed', 1));\n                if (typeof overrideRandomStartValueSeed == 'undefined' || !overrideRandomStartValueSeed) {\n                    seedRandom(2, true);\n                    seed = $bm_sum(seed, random(0, 1000));\n                } else {\n                    seed = $bm_sum(seed, overrideRandomStartValueSeed);\n                }\n                MH.srand(seed, true);\n            }\n            if (typeof allDimensionsEqual == 'undefined')\n                var allDimensionsEqual = false;\n            if (allDimensionsEqual)\n                acValSet($bm_mul($bm_mul([\n                    1,\n                    1,\n                    1\n                ], MH.rand(minX, maxX)), r));\n            else\n                acValSet($bm_mul([\n                    MH.rand(minX, maxX),\n                    MH.rand(minX, maxX),\n                    MH.rand(minX, maxX)\n                ], r));\n        }\n        mhOvershootRig1(false, false, 1, 1);\n    }\n    v = thisProperty.value;\n    if (acAccS !== null) {\n        v = acAccS;\n    }\n    return v;\n}\n$bm_rt = result;"},"a":{"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acPointValP('AC OUT [YRD] 2 Controls', 'Position', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"s":{"a":0,"k":[0,0,100],"ix":3,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acPointValP('AC OUT [YRD] 2 Controls', 'Scale', [\n        0,\n        0\n    ]));\n    return v;\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":8,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acAngleValP('AC OUT [YRD] 2 Controls', 'Rotation', 0));\n    return v;\n}\n$bm_rt = result;"},"o":{"a":0,"k":0,"ix":9,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var v = thisProperty.value;\n    function acValAdd(val) {\n        v = $bm_sum(v, val);\n    }\n    ;\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    acValAdd(acSliderValP('AC OUT [YRD] 2 Controls', 'Opacity', 100));\n    return v;\n}\n$bm_rt = result;"}}}]},"ip":96,"op":448,"st":31,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Capa 2 contornos","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[539.941,540.353,0],"ix":2},"a":{"a":0,"k":[213.242,213.241,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6,"x":"var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker.numKeys; i++) {\n            var m = bL.marker.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                case '2': {\n                        tTrO = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValMul(val) {\n        acAccM *= val;\n    }\n    function mhOvershoot(t, a, f, d) {\n        if (d <= 0) {\n            d = 0;\n        }\n        var y = $bm_div($bm_mul(a, Math.cos($bm_mul($bm_mul($bm_mul(t, f), Math.PI), 2))), Math.exp($bm_mul(t, d)));\n        if (t < 0.8) {\n            return y;\n        }\n        return $bm_mul(y, $bm_sub(1, $bm_div($bm_sub(t, 0.8), 0.2)));\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccM = 1;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [NWX] Controls');\n    if (ac.en) {\n        acValMul($bm_sub(1, $bm_mul(mhOvershoot($bm_sub(1, ac.fade), 1, acSliderValP('AC IN [NWX] Controls', 'Number of bounces', 2), 7), $bm_sum($bm_div(acSliderValP('AC IN [NWX] Controls', 'Scale', 0), -100), 1))));\n    }\n    ac.en = false;\n    if (tTrO !== null && t >= tTrO) {\n        upACo(0, 0, tTrO, $bm_sub($bm_sub(bL.outPoint, tTrO), thisComp.frameDuration));\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC OUT [NWX] 2 Controls');\n    if (ac.en) {\n        acValMul($bm_sub(1, $bm_mul(mhOvershoot($bm_sub(1, ac.fade), 1, acSliderValP('AC OUT [NWX] 2 Controls', 'Number of bounces', 2), 7), $bm_sum($bm_div(acSliderValP('AC OUT [NWX] 2 Controls', 'Scale', 0), -100), 1))));\n    }\n    v = thisProperty.value;\n    v *= acAccM;\n    return v;\n}\n$bm_rt = result;"}},"ao":0,"ef":[{"ty":5,"nm":"AC IN [NWX] Controls","np":4,"mn":"Pseudo/MHAC PrCtrl NWX 4","ix":1,"en":1,"ef":[{"ty":0,"nm":"Number of bounces","mn":"Pseudo/MHAC PrCtrl NWX 4-0001","ix":1,"v":{"a":0,"k":1,"ix":1}},{"ty":0,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl NWX 4-0002","ix":2,"v":{"a":0,"k":0,"ix":2}}]},{"ty":5,"nm":"AC OUT [NWX] 2 Controls","np":4,"mn":"Pseudo/MHAC PrCtrl NWX 4","ix":2,"en":1,"ef":[{"ty":0,"nm":"Number of bounces","mn":"Pseudo/MHAC PrCtrl NWX 4-0001","ix":1,"v":{"a":0,"k":2,"ix":1}},{"ty":0,"nm":"Scale","mn":"Pseudo/MHAC PrCtrl NWX 4-0002","ix":2,"v":{"a":0,"k":0,"ix":2}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-117.632],[117.632,0],[0,117.631],[-117.632,0]],"o":[[0,117.631],[-117.632,0],[0,-117.632],[117.632,0]],"v":[[212.992,0],[0,212.991],[-212.992,0],[0,-212.991]],"c":true},"ix":2},"nm":"Trazado 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.141000007181,0.282000014361,0.349000010771,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Relleno 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[213.242,213.241],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Grupo 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":70,"op":474,"st":31,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Capa de formas 1","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[540,540,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,-290],[18,0],[0,302],[0,0]],"o":[[0,0],[0,0],[0,290],[-18,0],[0,-4],[0,0]],"v":[[-22,-286],[2,-286],[290,2],[8,294],[-294,-8],[-294,-24.5]],"c":false},"ix":2},"nm":"Trazado 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":88,"s":[0]},{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":163,"s":[100]},{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":382,"s":[100]},{"t":455,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Recortar trazados 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.482352971096,0.760784373564,0.737254901961,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":204,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Trazo 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Forma 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":59,"op":485,"st":59,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Capa 1 contornos","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[539.941,540.353,0],"ix":2},"a":{"a":0,"k":[383.622,383.603,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[208.277,2.897],[0,0],[0,-116.642],[117.632,0],[0,117.631],[0,0.007],[0,0],[-210.312,0],[0,210.312]],"o":[[0,0],[116.265,1.587],[0,117.631],[-117.632,0],[0,-0.006],[0,0],[0,210.312],[210.311,0],[0,-208.297]],"v":[[5.333,-383.353],[2.962,-212.954],[212.992,0],[0,212.991],[-212.991,0],[-212.99,-0.019],[-383.371,-0.019],[0,383.353],[383.372,-0.019]],"c":true},"ix":2},"nm":"Trazado 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.481999984442,0.760999971278,0.736999990426,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Relleno 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[383.621,383.603],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Grupo 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":59,"op":485,"st":59,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Capa de formas 2","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[540,540,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,-290],[18,0],[0,302],[0,0]],"o":[[0,0],[0,0],[0,290],[-18,0],[0,-4],[0,0]],"v":[[-22,-286],[2,-286],[290,2],[8,294],[-294,-8],[-294,-24.5]],"c":false},"ix":2},"nm":"Trazado 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":73,"s":[0]},{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":148,"s":[100]},{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":400,"s":[100]},{"t":473,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Recortar trazados 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.141176470588,0.282352941176,0.349019607843,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":204,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Trazo 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Forma 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":44,"op":500,"st":44,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Capa 1 contornos 2","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[539.941,540.353,0],"ix":2},"a":{"a":0,"k":[383.622,383.603,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[208.277,2.897],[0,0],[0,-116.642],[117.632,0],[0,117.631],[0,0.007],[0,0],[-210.312,0],[0,210.312]],"o":[[0,0],[116.265,1.587],[0,117.631],[-117.632,0],[0,-0.006],[0,0],[0,210.312],[210.311,0],[0,-208.297]],"v":[[5.333,-383.353],[2.962,-212.954],[212.992,0],[0,212.991],[-212.991,0],[-212.99,-0.019],[-383.371,-0.019],[0,383.353],[383.372,-0.019]],"c":true},"ix":2},"nm":"Trazado 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.141176470588,0.282352941176,0.349019607843,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Relleno 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[383.621,383.603],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Grupo 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":44,"op":500,"st":44,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Capa de formas 3","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[540,540,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,-290],[18,0],[0,302],[0,0]],"o":[[0,0],[0,0],[0,290],[-18,0],[0,-4],[0,0]],"v":[[-22,-286],[2,-286],[290,2],[8,294],[-294,-8],[-294,-24.5]],"c":false},"ix":2},"nm":"Trazado 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":60,"s":[0]},{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":135,"s":[100]},{"i":{"x":[0.4],"y":[1]},"o":{"x":[0.2],"y":[0]},"t":424,"s":[100]},{"t":497,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Recortar trazados 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.898039275525,0.549019607843,0.521568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":204,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Trazo 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Forma 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":31,"op":513,"st":31,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Capa 1 contornos 3","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[539.941,540.353,0],"ix":2},"a":{"a":0,"k":[383.622,383.603,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[208.277,2.897],[0,0],[0,-116.642],[117.632,0],[0,117.631],[0,0.007],[0,0],[-210.312,0],[0,210.312]],"o":[[0,0],[116.265,1.587],[0,117.631],[-117.632,0],[0,-0.006],[0,0],[0,210.312],[210.311,0],[0,-208.297]],"v":[[5.333,-383.353],[2.962,-212.954],[212.992,0],[0,212.991],[-212.991,0],[-212.99,-0.019],[-383.371,-0.019],[0,383.353],[383.372,-0.019]],"c":true},"ix":2},"nm":"Trazado 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039275525,0.549019607843,0.521568627451,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Relleno 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[383.621,383.603],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Grupo 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":31,"op":513,"st":31,"bm":0}],"markers":[],"chars":[{"ch":"1","size":265,"style":"Demi","w":56.7,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[22.8,0],[35.8,0],[35.8,-66.7],[13.2,-66.7],[13.2,-55.4],[22.8,-55.4]],"c":true},"ix":2},"nm":"1","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"FuturaT"},{"ch":"0","size":265,"style":"Demi","w":56.7,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.8,-6.5],[0,-10.333],[-4.8,-6.533],[-7.667,0],[-4.8,6.534],[0,10.334],[4.8,6.5],[7.6,0]],"o":[[-4.8,6.5],[0,10.334],[4.8,6.534],[7.6,0],[4.8,-6.533],[0,-10.333],[-4.8,-6.5],[-7.667,0]],"v":[[9.7,-58.65],[2.5,-33.4],[9.7,-8.1],[28.4,1.7],[47,-8.1],[54.2,-33.4],[47,-58.65],[28.4,-68.4]],"c":true},"ix":2},"nm":"0","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[-2.4,-4.4],[0,-6.866],[2.4,-4.4],[3.733,0],[2.433,4.434],[0,6.867],[-2.434,4.4],[-3.734,0]],"o":[[2.4,4.4],[0,6.934],[-2.4,4.4],[-3.734,0],[-2.434,-4.433],[0,-6.866],[2.433,-4.4],[3.733,0]],"v":[[37.6,-50.3],[41.2,-33.4],[37.6,-16.4],[28.4,-9.8],[19.15,-16.45],[15.5,-33.4],[19.15,-50.3],[28.4,-56.9]],"c":true},"ix":2},"nm":"0","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"0","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"FuturaT"},{"ch":"a","size":96.696907043457,"style":"Demi","w":56.9,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[5.533,0],[4.066,-4.4],[0,-6.466],[-4.067,-4.4],[-6.134,0],[-3.8,4.667],[0,0],[0,0],[0,0],[0,0]],"o":[[-4,-4.666],[-6,0],[-4.067,4.4],[0,6.667],[4.066,4.4],[5.6,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[39.1,-37.7],[24.8,-44.7],[9.7,-38.1],[3.6,-21.8],[9.7,-5.2],[25,1.4],[39.1,-5.6],[39.1,0],[51.3,0],[51.3,-43.3],[39.1,-43.3]],"c":true},"ix":2},"nm":"a","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[-2.367,-2.347],[0,-3.372],[2.366,-2.347],[3.333,0],[2.4,2.381],[0,3.306],[-2.367,2.347],[-3.4,0]],"o":[[2.366,2.347],[0,3.306],[-2.367,2.347],[-3.334,0],[-2.4,-2.38],[0,-3.305],[2.366,-2.347],[3.333,0]],"v":[[36.85,-30.178],[40.4,-21.6],[36.85,-13.12],[28.3,-9.6],[19.7,-13.17],[16.1,-21.7],[19.65,-30.178],[28.3,-33.7]],"c":true},"ix":2},"nm":"a","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"a","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"FuturaT"},{"ch":"ñ","size":96.696907043457,"style":"Demi","w":53.3,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[-6.098,0],[-1.259,-1.6],[0,-3.733],[0,0],[0,0],[0,0],[2.266,2.6],[5.333,0],[3.533,-4.533],[0,0],[0,0]],"o":[[0,0],[0,0],[0,-8],[2.983,0],[1.259,1.6],[0,0],[0,0],[0,0],[0,-5.4],[-3,-3.466],[-5.6,0],[0,0],[0,0],[0,0]],"v":[[5.8,0],[18,0],[18,-22.4],[27.147,-34.4],[33.511,-32],[35.4,-24],[35.4,0],[47.6,0],[47.6,-27.5],[44.2,-39.5],[31.7,-44.7],[18,-37.9],[18,-43.3],[5.8,-43.3]],"c":true},"ix":2},"nm":"ñ","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[-1.667,0],[-3.034,-1.233],[-1.534,0],[-1.734,8.467],[0,0],[1.6,0],[3.133,1.2],[1.8,0],[1.933,-2.269],[0.533,-3.928],[0,0]],"o":[[1.6,0],[3.033,1.234],[6.133,0],[0,0],[-1.334,2.534],[-1.067,0],[-3.467,-1.333],[-2.8,0],[-1.934,2.269],[0,0],[0.933,-2.466]],"v":[[19.9,-55.8],[26.85,-53.95],[33.7,-52.1],[45.5,-64.8],[38.6,-64.8],[34.2,-61],[27.9,-62.8],[20,-64.8],[12.9,-61.395],[9.2,-52.1],[16,-52.1]],"c":true},"ix":2},"nm":"ñ","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"ñ","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"FuturaT"},{"ch":"o","size":96.696907043457,"style":"Demi","w":56.5,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.6,-4.3],[0,-6.8],[-4.6,-4.3],[-7.267,0],[-4.6,4.3],[0,6.8],[4.566,4.267],[7.333,0]],"o":[[-4.6,4.3],[0,6.734],[4.6,4.3],[7.333,0],[4.6,-4.3],[0,-6.8],[-4.567,-4.266],[-7.334,0]],"v":[[10.4,-38.25],[3.5,-21.6],[10.4,-5.05],[28.2,1.4],[46.1,-5.05],[53,-21.7],[46.15,-38.3],[28.3,-44.7]],"c":true},"ix":2},"nm":"o","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[-2.4,-2.347],[0,-3.372],[2.4,-2.347],[3.333,0],[2.4,2.347],[0,3.306],[-2.4,2.381],[-3.4,0]],"o":[[2.4,2.347],[0,3.306],[-2.4,2.347],[-3.4,0],[-2.4,-2.347],[0,-3.306],[2.4,-2.38],[3.333,0]],"v":[[36.9,-30.178],[40.5,-21.6],[36.9,-13.12],[28.3,-9.6],[19.6,-13.12],[16,-21.6],[19.6,-30.13],[28.3,-33.7]],"c":true},"ix":2},"nm":"o","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"o","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"FuturaT"},{"ch":"s","size":96.696907043457,"style":"Demi","w":40.5,"data":{"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[5.466,0],[2.866,-2.6],[0,-4.066],[-2.867,-2],[-4.067,-1.466],[-0.834,-0.666],[0,-1.266],[1.066,-0.9],[1.6,0],[3.4,3.4],[0,0],[-6.534,0],[-3.4,2.9],[0,4.534],[1.866,1.9],[5.066,1.8],[0.866,0.6],[0,1.067],[-0.9,0.7],[-1.334,0],[-2.534,-1.933],[0,0]],"o":[[-4.4,0],[-2.867,2.6],[0,3.934],[1.466,1.067],[2.8,1],[0.833,0.667],[0,1.4],[-1.067,0.9],[-3.4,0],[0,0],[4.4,4.8],[5.333,0],[3.4,-2.9],[0,-3.4],[-1.867,-1.9],[-2.867,-1],[-0.867,-0.6],[0,-1],[0.9,-0.7],[2.266,0],[0,0],[-4.134,-3.066]],"v":[[21.1,-44.9],[10.2,-41],[5.9,-31],[10.2,-22.1],[18.5,-18.3],[23.95,-15.8],[25.2,-12.9],[23.6,-9.45],[19.6,-8.1],[9.4,-13.2],[3.1,-5.8],[19.5,1.4],[32.6,-2.95],[37.7,-14.1],[34.9,-22.05],[24.5,-27.6],[18.9,-30],[17.6,-32.5],[18.95,-35.05],[22.3,-36.1],[29.5,-33.2],[35.5,-40.3]],"c":true},"ix":2},"nm":"s","mn":"ADBE Vector Shape - Group","hd":false}],"nm":"s","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}]},"fFamily":"FuturaT"}]}